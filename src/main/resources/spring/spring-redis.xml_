<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"  >

    <!--<bean id="shardedJedisPool" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<constructor-arg index="0" ref="jedisPoolConfig"/>-->
    <!--<constructor-arg index="1">-->
    <!--<list>-->
    <!--<bean name="slaver" class="redis.clients.jedis.JedisShardInfo">-->
    <!--<constructor-arg index="0" value="${redis.slaver.host}"/>-->
    <!--<constructor-arg index="1" value="${redis.slaver.port}" type="int"/>-->
    <!--</bean>-->
    <!--<bean name="master" class="redis.clients.jedis.JedisShardInfo">-->
    <!--<constructor-arg index="0" value="${redis.master.host}"/>-->h
    <!--<constructor-arg index="1" value="${redis.master.port}" type="int"/>-->
    <!--</bean>-->
    <!--</list>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxActive" value="${redis.maxActive}" />-->
    <!--<property name="maxIdle" value="${redis.maxIdle}" />-->
    <!--<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />-->
    <!--<property name="testOnBorrow" value="${redis.testOnBorrow}"/>-->
    <!--<property name="testOnReturn" value="${redis.testOnReturn}"/>-->
    <!--&lt;!&ndash; <property name="testWhileIdle" value="true"/> &ndash;&gt;-->
    <!--</bean>-->

    <!--<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">-->
    <!--<constructor-arg index="0" ref="jedisPoolConfig" />-->
    <!--<constructor-arg index="1">-->
    <!--<list>-->
    <!--<bean class="redis.clients.jedis.JedisShardInfo">-->
    <!--<constructor-arg name="host" value="${redis.host}" />-->
    <!--<constructor-arg name="port" value="${redis.port}" />-->
    <!--<constructor-arg name="password" value="${redis.pass}" />-->
    <!--<constructor-arg name="timeout" value="${redis.timeout}" />-->
    <!--<constructor-arg name="weight" value="1" />-->
    <!--</bean>-->
    <!--</list>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--<property name="maxActive" value="${redis.maxActive}"></property>-->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"></property>
        <!--<property name="whenExhaustedAction" value="${redis.whenExhaustedAction}"></property>-->
        <property name="maxTotal"  value="${redis.maxTotal}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.testOnReturn}" />
        <!--<property name="encode" value="${redis.encode}" />-->
        <!--<property name="expire" value="${redis.expire}" />-->
        <!--<property name="unlock" value="${redis.unlock}" />-->
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <property name="poolConfig" ref="jedisPoolConfig"></property>
        <property name="hostName" value="${redis.host}"></property>
        <property name="port" value="${redis.port}"></property>
        <property name="password" value="${redis.password}"></property>
        <property name="timeout" value="${redis.timeout}"></property>
        <property name="usePool" value="true"></property>
    </bean>

    <!--<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
    <!--p:host-name="${redis.host}"-->
    <!--p:port="${redis.port}"-->
    <!--p:password="${redis.pass}"-->
    <!--p:pool-config-ref="poolConfig"/>-->

    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

</beans>